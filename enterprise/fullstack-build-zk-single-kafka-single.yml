services:
  backend:
    container_name: backend
    build:
      context: ../
      dockerfile: ./enterprise/backend/Dockerfile
    restart: always
    environment:
      - ALLOWED_HOSTS=backend,localhost
      - CISO_ASSISTANT_URL=https://localhost:8443
      - DJANGO_DEBUG=True
      - LICENSE_SEATS=5
      - LICENSE_EXPIRATION=2025-12-21
      - DJANGO_SETTINGS_MODULE=enterprise_core.settings
    volumes:
      - ./db:/code/db

  huey:
    container_name: huey
    build:
      context: ../
      dockerfile: ./enterprise/backend/Dockerfile
    restart: always
    environment:
      - ALLOWED_HOSTS=backend,localhost
      - DJANGO_DEBUG=True
      - LICENSE_SEATS=5
      - LICENSE_EXPIRATION=2025-12-21
    volumes:
      - ./db:/code/db
    entrypoint:
      - /bin/sh
      - -c
      - |
        poetry run python manage.py run_huey

  frontend:
    container_name: frontend
    environment:
      - PUBLIC_BACKEND_API_URL=http://backend:8000/api
      - PUBLIC_BACKEND_API_EXPOSED_URL=https://localhost:8443/api
      - PROTOCOL_HEADER=x-forwarded-proto
      - HOST_HEADER=x-forwarded-host

    build:
      context: ../
      dockerfile: ./enterprise/frontend/Dockerfile
    depends_on:
      - backend

  caddy:
    container_name: caddy
    image: caddy:2.8.4
    environment:
      - CISO_ASSISTANT_URL=https://localhost:8443
    restart: unless-stopped
    ports:
      - 8443:8443
    volumes:
      - ./db:/data
    command: |
      sh -c 'echo $$CISO_ASSISTANT_URL "{
      reverse_proxy /api/* backend:8000
      reverse_proxy /* frontend:3000
      tls internal
      }" > Caddyfile && caddy run'

  dispatcher:
    container_name: dispatcher
    build:
      context: ../dispatcher
    depends_on:
      - backend
      - kafka1
    environment:
      - BOOTSTRAP_SERVERS=kafka1:9092
      - API_URL=localhost:8443

  # Courtesy of conduktor https://github.com/conduktor/kafka-stack-docker-compose
  # Licensed under Apache 2.0 (f7dffb7)
  zoo1:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
