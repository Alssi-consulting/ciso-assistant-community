# Generated by Django 5.0.2 on 2024-03-04 20:07

import django.db.models.deletion
import iam.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_project_lc_status_alter_securitymeasure_effort'),
        ('iam', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='securitymeasure',
            name='security_function',
        ),
        migrations.RemoveField(
            model_name='requirementnode',
            name='security_functions',
        ),
        migrations.RemoveField(
            model_name='securitymeasure',
            name='evidences',
        ),
        migrations.RemoveField(
            model_name='securitymeasure',
            name='folder',
        ),
        migrations.RemoveField(
            model_name='requirementassessment',
            name='security_measures',
        ),
        migrations.RemoveField(
            model_name='riskscenario',
            name='security_measures',
        ),
        migrations.AlterField(
            model_name='riskscenario',
            name='existing_measures',
            field=models.TextField(blank=True, help_text='The existing applied controls to manage this risk. Edit the risk scenario to add extra applied controls.', max_length=2000, verbose_name='Existing measures'),
        ),
        migrations.CreateModel(
            name='AppliedControl',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='UpdatedÒ at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('category', models.CharField(blank=True, choices=[('policy', 'Policy'), ('process', 'Process'), ('technical', 'Technical'), ('physical', 'Physical')], max_length=20, null=True, verbose_name='Category')),
                ('status', models.CharField(blank=True, choices=[('planned', 'Planned'), ('active', 'Active'), ('inactive', 'Inactive')], max_length=20, null=True, verbose_name='Status')),
                ('eta', models.DateField(blank=True, help_text='Estimated Time of Arrival', null=True, verbose_name='ETA')),
                ('expiry_date', models.DateField(blank=True, help_text='Date after which the applied control is no longer valid', null=True, verbose_name='Expiry date')),
                ('link', models.CharField(blank=True, help_text='External url for action follow-up (eg. Jira ticket)', max_length=1000, null=True, verbose_name='Link')),
                ('effort', models.CharField(blank=True, choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large')], help_text='Relative effort of the measure (using T-Shirt sizing)', max_length=2, null=True, verbose_name='Effort')),
                ('evidences', models.ManyToManyField(blank=True, related_name='applied_controls', to='core.evidence', verbose_name='Evidences')),
                ('folder', models.ForeignKey(default=iam.models.Folder.get_root_folder, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_folder', to='iam.folder')),
            ],
            options={
                'verbose_name': 'Applied control',
                'verbose_name_plural': 'Applied controls',
            },
        ),
        migrations.AddField(
            model_name='requirementassessment',
            name='applied_controls',
            field=models.ManyToManyField(blank=True, related_name='requirement_assessments', to='core.appliedcontrol', verbose_name='Applied controls'),
        ),
        migrations.AddField(
            model_name='riskscenario',
            name='applied_controls',
            field=models.ManyToManyField(blank=True, related_name='risk_scenarios', to='core.appliedcontrol', verbose_name='Applied controls'),
        ),
        migrations.CreateModel(
            name='ReferenceControl',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='UpdatedÒ at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('urn', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='URN')),
                ('ref_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference ID')),
                ('locale', models.CharField(default='en', max_length=100, verbose_name='Locale')),
                ('default_locale', models.BooleanField(default=True, verbose_name='Default locale')),
                ('provider', models.CharField(blank=True, max_length=200, null=True, verbose_name='Provider')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('annotation', models.TextField(blank=True, null=True, verbose_name='Annotation')),
                ('category', models.CharField(blank=True, choices=[('policy', 'Policy'), ('process', 'Process'), ('technical', 'Technical'), ('physical', 'Physical')], max_length=20, null=True, verbose_name='Category')),
                ('typical_evidence', models.JSONField(blank=True, null=True, verbose_name='Typical evidence')),
                ('folder', models.ForeignKey(default=iam.models.Folder.get_root_folder, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_folder', to='iam.folder')),
                ('library', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reference_controls', to='core.library')),
            ],
            options={
                'verbose_name': 'Reference control',
                'verbose_name_plural': 'Reference controls',
            },
        ),
        migrations.AddField(
            model_name='appliedcontrol',
            name='reference_control',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.referencecontrol', verbose_name='Reference Control'),
        ),
        migrations.AddField(
            model_name='requirementnode',
            name='reference_controls',
            field=models.ManyToManyField(blank=True, related_name='requirements', to='core.referencecontrol', verbose_name='Reference controls'),
        ),
        migrations.DeleteModel(
            name='SecurityFunction',
        ),
        migrations.DeleteModel(
            name='SecurityMeasure',
        ),
    ]
