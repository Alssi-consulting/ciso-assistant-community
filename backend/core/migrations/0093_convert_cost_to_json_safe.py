# Generated by Django 5.1.10 on 2025-09-02 17:04

from django.db import migrations, models


def convert_cost_to_json(apps, schema_editor):
    """Convert existing numeric cost values to JSON structure"""
    AppliedControl = apps.get_model("core", "AppliedControl")

    for control in AppliedControl.objects.filter(cost__isnull=False):
        try:
            # Store the current numeric cost
            old_cost = float(control.cost)

            # Convert to new JSON structure
            control.cost = {
                "currency": "â‚¬",
                "build": {
                    "fixed_cost": old_cost,
                    "people_days": 0.0,
                },
                "run": {"fixed_cost": 0.0, "people_days": 0.0},
            }
            control.save(update_fields=["cost"])

        except (ValueError, TypeError):
            # Skip invalid cost values
            control.cost = {}
            control.save(update_fields=["cost"])


def reverse_cost_conversion(apps, schema_editor):
    """Convert JSON cost back to build.fixed_cost numeric value"""
    AppliedControl = apps.get_model("core", "AppliedControl")

    for control in AppliedControl.objects.filter(cost__isnull=False):
        try:
            if isinstance(control.cost, dict) and "build" in control.cost:
                control.cost = control.cost["build"].get("fixed_cost", 0.0)
            else:
                control.cost = 0.0
            control.save(update_fields=["cost"])
        except (ValueError, TypeError, KeyError):
            control.cost = None
            control.save(update_fields=["cost"])


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0092_terminology"),
    ]

    operations = [
        # Convert the field type and migrate data
        migrations.RunPython(
            convert_cost_to_json,
            reverse_cost_conversion,
        ),
        # Change field type to JSONField
        migrations.AlterField(
            model_name="appliedcontrol",
            name="cost",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Detailed cost structure including build and run costs",
                null=True,
                verbose_name="Cost",
            ),
        ),
    ]
