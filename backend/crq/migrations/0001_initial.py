# Generated by Django 5.1.10 on 2025-08-26 10:53

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0090_complianceassessment_is_locked_and_more'),
        ('iam', '0014_user_observation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuantitativeRiskAggregation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('ref_id', models.CharField(blank=True, max_length=100)),
                ('simulation_data', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Quantitative Risk Aggregation',
                'verbose_name_plural': 'Quantitative Risk Aggregations',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuantitativeRiskStudy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('eta', models.DateField(blank=True, null=True, verbose_name='ETA')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due date')),
                ('ref_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(blank=True, choices=[('planned', 'Planned'), ('in_progress', 'In progress'), ('in_review', 'In review'), ('done', 'Done'), ('deprecated', 'Deprecated')], default='planned', max_length=100, null=True, verbose_name='Status')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('authors', models.ManyToManyField(blank=True, related_name='quantitative_risk_study_authors', to=settings.AUTH_USER_MODEL, verbose_name='Authors')),
                ('folder', models.ForeignKey(default=iam.models.Folder.get_root_folder_id, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_folder', to='iam.folder')),
                ('reviewers', models.ManyToManyField(blank=True, related_name='quantitative_risk_study_reviewers', to=settings.AUTH_USER_MODEL, verbose_name='Reviewers')),
            ],
            options={
                'verbose_name': 'Quantitative Risk Study',
                'verbose_name_plural': 'Quantitative Risk Studies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuantitativeRiskScenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('ref_id', models.CharField(blank=True, max_length=100)),
                ('assets', models.ManyToManyField(blank=True, help_text='Assets impacted by the risk scenario', related_name='quantitative_risk_scenarios', to='core.asset', verbose_name='Assets')),
                ('qualifications', models.ManyToManyField(blank=True, related_name='quantitative_risk_scenarios', to='core.qualification', verbose_name='Qualifications')),
                ('threats', models.ManyToManyField(blank=True, related_name='quantitative_risk_scenarios', to='core.threat', verbose_name='Threats')),
                ('vulnerabilities', models.ManyToManyField(blank=True, help_text='Vulnerabities exploited by the risk scenario', related_name='quantitative_risk_scenarios', to='core.vulnerability', verbose_name='Vulnerabilities')),
                ('quantitative_risk_study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_scenarios', to='crq.quantitativeriskstudy')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuantitativeRiskHypothesis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('ref_id', models.CharField(blank=True, max_length=100)),
                ('estimated_parameters', models.JSONField(blank=True, default=dict, null=True)),
                ('simulation_data', models.JSONField(blank=True, default=dict, null=True)),
                ('justification', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('added_applied_controls', models.ManyToManyField(blank=True, related_name='quantitative_risk_hypotheses_added', to='core.appliedcontrol', verbose_name='Added Applied controls')),
                ('existing_applied_controls', models.ManyToManyField(blank=True, related_name='quantitative_risk_hypotheses_existing', to='core.appliedcontrol', verbose_name='Existing Applied controls')),
                ('filtering_labels', models.ManyToManyField(blank=True, to='core.filteringlabel', verbose_name='Labels')),
                ('qantitative_risk_aggregations', models.ManyToManyField(blank=True, related_name='hypotheses', to='crq.quantitativeriskaggregation', verbose_name='Quantitative Risk Aggregations')),
                ('removed_applied_controls', models.ManyToManyField(blank=True, related_name='quantitative_risk_hypotheses_removed', to='core.appliedcontrol', verbose_name='Removed Applied controls')),
                ('quantitative_risk_scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hypotheses', to='crq.quantitativeriskscenario')),
                ('quantitative_risk_study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hypotheses', to='crq.quantitativeriskstudy')),
            ],
            options={
                'verbose_name': 'Quantitative Risk Hypothesis',
                'verbose_name_plural': 'Quantitative Risk Hypotheses',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='quantitativeriskaggregation',
            name='quantitative_risk_study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aggregations', to='crq.quantitativeriskstudy'),
        ),
    ]
